version: '3'
services:
  spring-boot-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    links:
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/compose-postgres
      SPRING_DATASOURCE_USERNAME: compose-postgres
      SPRING_DATASOURCE_PASSWORD: compose-postgres
      SPRING_REDIS_DATA_HOST: redis
      SPRING_REDIS_DATA_PORT: 6379
    depends_on:
      - postgres
      - elasticsearch
      - redis
    networks:
      - my-network

  redis:
    image: 'redis:latest'
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    networks:
      - my-network

  postgres:
    image: 'postgres:13.1-alpine'
    container_name: postgres
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
    ports:
      - "5432:5432"
    networks:
      - my-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - my-network
networks:
  my-network:
    driver: bridge